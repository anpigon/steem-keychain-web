{"version":3,"sources":["components/TabPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","appBar","boxShadow","borderBottomWidth","borderBottomStyle","borderBottomColor","primary","main","title","display","justifyContent","tabPanel","padding","a11yProps","App","classes","React","useState","setValue","useEffect","amplitude","getInstance","init","handleClick","event","preventDefault","url","currentTarget","href","logEvent","dataset","window","location","buildList","data","filterCategory","List","filter","category","isIOS","isMobileSafari","map","item","Link","homepage","underline","data-category","data-title","onClick","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","icon","ListItemText","secondary","description","subtitle","Divider","variant","component","className","AppBar","position","Tabs","onChange","newValue","centered","textColor","indicatorColor","Tab","label","wrapped","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b705d2ed.chunk.js","sourcesContent":["\ninterface TabPanelProps {\n  children: React.ReactNode;\n  value: number;\n  index: number;\n};\nexport default function TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n","import amplitude from \"amplitude-js\";\nimport React from \"react\";\nimport {\n  AppBar,\n  Tabs,\n  Tab,\n  makeStyles,\n  List,\n  ListItem,\n  Avatar,\n  ListItemAvatar,\n  ListItemText,\n  Divider,\n  Link,\n} from \"@material-ui/core\";\nimport { isIOS, isMobileSafari } from \"react-device-detect\";\n\nimport TabPanel from \"./components/TabPanel\";\n\nimport data from \"./data.json\";\ntype itemType = typeof data[0];\n\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    amplitude.getInstance().init(\"d10ee4fd973714f7f25f0b201eb88e28\");\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleClick: React.MouseEventHandler<HTMLAnchorElement> = (event) => {\n    event.preventDefault();\n\n    const url = event.currentTarget.href;\n\n    amplitude\n      .getInstance()\n      .logEvent(\"link_clicked\", { url, ...event.currentTarget.dataset });\n\n    window.location.href = url;\n  };\n\n  function buildList(data: itemType[], filterCategory?: string) {\n    return (\n      <List>\n        {data\n          .filter(({ category }) => {\n            if (category === \"game\" && (isIOS || isMobileSafari)) return false;\n            if (!filterCategory) return true;\n            return category === filterCategory;\n          })\n          .map((item, index) => [\n            <Link\n              href={item.homepage}\n              underline=\"none\"\n              key={`item-${index}`}\n              data-category={item.category}\n              data-title={item.title}\n              onClick={handleClick}\n            >\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar alt={item.title} src={item.icon} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={item.title}\n                  secondary={item.description || item.subtitle}\n                />\n              </ListItem>\n            </Link>,\n            <Divider variant=\"inset\" component=\"li\" key={`divider-${index}`} />,\n          ])}\n      </List>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"sticky\"\n        classes={{\n          root: classes.appBar,\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          centered\n          variant=\"fullWidth\"\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n        >\n          <Tab label=\"All\" wrapped {...a11yProps(0)} />\n          <Tab label=\"Social\" wrapped {...a11yProps(1)} />\n          <Tab label=\"Tool\" wrapped {...a11yProps(2)} />\n          {!isIOS && !isMobileSafari && (\n            <Tab label=\"Game\" wrapped {...a11yProps(3)} />\n          )}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {buildList(data)}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {buildList(data, \"social\")}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        {buildList(data, \"tool\")}\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        {buildList(data, \"game\")}\n      </TabPanel>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    boxShadow: \"unset\",\n    backgroundColor: theme.palette.background.paper,\n    borderBottomWidth: 1,\n    borderBottomStyle: \"solid\",\n    borderBottomColor: `${theme.palette.primary.main}73`,\n  },\n  title: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  tabPanel: {\n    padding: 0,\n  },\n}));\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}